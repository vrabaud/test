/*
* Generated for ALPreferences, then edited by hand for dynamic type methods
*
* Copyright (C) 2010 Aldebaran Robotics
*
*/

//#include <rosbridge/ALModuleGetMethodHelp.h>
//#include <rosbridge/ALModuleGetModuleHelp.h>
//#include <rosbridge/ALPreferencesReadPrefFile.h>
//#include <rosbridge/ALPreferencesSaveToMemory.h>
//#include <rosbridge/ALPreferencesWritePrefFile.h>

//TEST(ALPreferences, getMethodHelp) {
//  ros::NodeHandle n;
//  ros::ServiceClient client = n.serviceClient<rosbridge::ALModuleGetMethodHelp>(std::string("NaoQi/ALPreferences/getMethodHelp"));
//  rosbridge::ALModuleGetMethodHelp msg;
  //msg.methodName = ;

//  int result = client.call(msg);
//  ASSERT_EQ(result, true);
//}

//TEST(ALPreferences, getModuleHelp) {
//  ros::NodeHandle n;
//  ros::ServiceClient client = n.serviceClient<rosbridge::ALModuleGetModuleHelp>(std::string("NaoQi/ALPreferences/getModuleHelp"));
//  rosbridge::ALModuleGetModuleHelp msg;


//  int result = client.call(msg);
//  ASSERT_EQ(result, true);
//}

//TEST(ALPreferences, readPrefFile) {
//  ros::NodeHandle n;
//  ros::ServiceClient client = n.serviceClient<rosbridge::ALPreferencesReadPrefFile>(std::string("NaoQi/ALPreferences/readPrefFile"));
//  rosbridge::ALPreferencesReadPrefFile msg;
  //msg.fileName = ;
  //msg.autoGenerateMemoryNames = ;

//  int result = client.call(msg);
//  ASSERT_EQ(result, true);
//}

//TEST(ALPreferences, saveToMemory) {
//  ros::NodeHandle n;
//  ros::ServiceClient client = n.serviceClient<rosbridge::ALPreferencesSaveToMemory>(std::string("NaoQi/ALPreferences/saveToMemory"));
//  rosbridge::ALPreferencesSaveToMemory msg;
  //msg.prefs = ;

//  int result = client.call(msg);
//  ASSERT_EQ(result, true);
//}

//TEST(ALPreferences, writePrefFile) {
//  ros::NodeHandle n;
//  ros::ServiceClient client = n.serviceClient<rosbridge::ALPreferencesWritePrefFile>(std::string("NaoQi/ALPreferences/writePrefFile"));
//  rosbridge::ALPreferencesWritePrefFile msg;
  //msg.fileName = ;
  //msg.prefs = ;
  //msg.ignoreMemoryNames = ;

//  int result = client.call(msg);
//  ASSERT_EQ(result, true);
//}


